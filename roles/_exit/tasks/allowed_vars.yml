- name: Compute custom variables.
  set_fact:
    ce_provision_extra_vars_computed: "{{ ce_provision_extra_vars_computed | default({}) | combine({item.name: lookup('vars', item.name)}, recursive=True) }}"
  when:
    - ce_provision.extra_repository_allowed_vars is defined
    - lookup('vars', item.name, default="")
  loop: "{{ ce_provision.extra_repository_allowed_vars }}"

- name: Generate/Update custom vars file.
  template:
    src: vars.j2
    dest: "{{ _ce_provision_build_tmp_dir }}/extra/{{ ce_provision.extra_repository_vars_file }}"
    mode: "0755"
  delegate_to: localhost
  become: true
  become_user: "{{ ce_provision.username }}"
  when:
    - ce_provision_extra_vars_computed is defined
    - ce_provision_extra_vars_computed | length > 1

- name: Check if configuration changed.
  command: "git status -s"
  args:
    chdir: "{{ _ce_provision_build_tmp_dir }}/extra"
  delegate_to: localhost
  register: _ce_provision_extra_vars_git_changed

- name: Stat newly generated configuration.
  command: git add .
  args:
    chdir: "{{ _ce_provision_build_tmp_dir }}/extra"
  become: true
  become_user: "{{ ce_provision.username }}"
  delegate_to: localhost
  when:
    - ce_provision_extra_vars_computed is defined
    - _ce_provision_extra_vars_git_changed.stdout

- name: Commit newly generated configuration.
  command: "git commit -m 'Ansible autogenerated configuration export - {{ ansible_date_time.iso8601 }}'"
  args:
    chdir: "{{ _ce_provision_build_tmp_dir }}/extra"
  become: true
  become_user: "{{ ce_provision.username }}"
  delegate_to: localhost
  when:
    - ce_provision_extra_vars_computed is defined
    - _ce_provision_extra_vars_git_changed.stdout

- name: Push newly generated configuration.
  command: "git push origin {{ ce_provision.extra_repository_branch }}"
  args:
    chdir: "{{ _ce_provision_build_tmp_dir }}/extra"
  become: true
  become_user: "{{ ce_provision.username }}"
  delegate_to: localhost
  when:
    - ce_provision_extra_vars_computed is defined
    - _ce_provision_extra_vars_git_changed.stdout
