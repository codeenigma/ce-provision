---
- name: Install UFW.
  apt:
    pkg: ["ufw"]
    state: present

- name: Gather facts from the controller/provisioner.
  setup:
  delegate_to: "localhost"
  delegate_facts: true

- name: Gather allowed SSH hosts from inventory (IPV4).
  set_fact:
    _firewall_allow_ssh_ipv4: "{{ hostvars['localhost']['ansible_all_ipv4_addresses'] + ansible_all_ipv4_addresses }}"

- name: Gather allowed SSH hosts from inventory (IPV6).
  set_fact:
    _firewall_allow_ssh_ipv6: "{{ hostvars['localhost']['ansible_all_ipv6_addresses'] + ansible_all_ipv6_addresses }}"

- name: Allow own IP.
  set_fact:
    _firewall_allow_ssh_ipv4: "{{ _firewall_allow_ssh_ipv4 + [ hostvars[inventory_hostname]['public_ip_address'] ] }}"
  when:
    - hostvars[inventory_hostname]['public_ip_address'] is defined

- name: Enable firewall.
  ufw:
    state: enabled

- name: Reset firewall.
  ufw:
    state: reset

- name: Replace Default UFW Config.
  template:
    src: ufw.j2
    dest: /etc/default/ufw
    owner: root
    group: root
    mode: 0644

- name: Add a rule to allow SSH from known hosts (IPV4).
  ufw:
    from_ip: "{{ ip }}"
    to_port: "22"
    rule: allow
    proto: tcp
    comment: Allow SSH from associated servers.
  with_items: "{{ _firewall_allow_ssh_ipv4 }}"
  loop_control:
    loop_var: ip

- name: Add a rule to allow SSH from known hosts (IPV6).
  ufw:
    from_ip: "{{ ip }}"
    to_port: "22"
    rule: allow
    proto: tcp
    comment: Allow SSH from associated servers.
  with_items: "{{ _firewall_allow_ssh_ipv6 }}"
  loop_control:
    loop_var: ip
  when: firewall.ipv6

- name: Define inbound IPs.
  set_fact:
    _firewall_inbound: "{{ firewall.inbound + firewall._inbound_defaults }}"

- name: Define outbound IPs
  set_fact:
    _firewall_outbound: "{{ firewall.outbound + firewall._outbound_defaults }}"

- name: Allow firewall inbound rules.
  include_tasks: inbound.yml
  with_items: "{{ _firewall_inbound }}"
  loop_control:
    loop_var: inbound

- name: Allow firewall outbound rules.
  include_tasks: outbound.yml
  with_items: "{{ _firewall_outbound }}"
  loop_control:
    loop_var: outbound


- name: Enable NAT.
  blockinfile:
    path: /etc/ufw/before.rules
    block: |
      # NAT table rules
      *nat
      :POSTROUTING ACCEPT [0:0]
      # Forward traffic through eth0 - Change to match you out-interface
      -A POSTROUTING -o {{ ansible_default_ipv4.interface }} -j MASQUERADE
      # don't delete the 'COMMIT' line or these nat table rules won't
      # be processed
      COMMIT
    insertbefore: "^# Don't delete these required lines"
    when: firewall.nat

- name: Configure Additional Firewall Rules.

  # https://docs.ansible.com/ansible/latest/modules/ufw_module.html#parameters

  ufw:
    comment: "{{ item.comment | default(omit) }}"
    delete: "{{ item.delete | default(omit) }}"
    direction: "{{ item.direction | default(omit) }}"
    from_ip: "{{ item.from_ip | default(omit) }}"
    from_port: "{{ item.from_port | default(omit) }}"
    insert: "{{ item.insert | default(omit) }}"
    interface: "{{ item.interface | default(omit) }}"
    interface_in: "{{ item.interface_in| default(omit) }}"
    interface_out: "{{ item.interface_out | default(omit) }}"
    log: "{{ item.log | default(omit) }}"
    logging: "{{ item.logging | default(omit) }}"
    name: "{{ item.name | default(omit) }}"
    policy: "{{ item.policy | default(omit) }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    rule: "{{ item.rule | default('allow') }}"
    state: "{{ item.state | default(omit) }}"
    to_ip: "{{ item.to_ip | default(omit) }}"
    to_port: "{{ item.to_port | default(omit) }}"
    route: "{{ item.route | default(omit) }}"
  with_items: "{{ firewall.rules }}"

- name: Reload firewall
  ufw:
    state: reloaded
