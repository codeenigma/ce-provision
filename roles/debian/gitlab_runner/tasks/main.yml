---
- name: Add GitLab Runner repository and key.
  ansible.builtin.include_role:
    name: debian/apt_repository
  vars:
    apt_repository:
      legacy_repo: "deb https://packages.gitlab.com/runner/gitlab-runner/debian/ {{ ansible_distribution_release }} main"
      format: deb822
      name: gitlab_runner
      types:
        - deb
        - deb-src
      uris:
        - https://packages.gitlab.com/runner/gitlab-runner/debian/
      signed_by: "{{ gitlab_runner.apt_signed_by }}"
      suites: "{{ ansible_distribution_release }}"
      components:
        - main
      state: present
      enabled: true
      key_refresh_timer_OnCalendar: "Mon *-*-* 00:30:00"

- name: Add GitLab Runner repository to unattended-upgrades origins list.
  ansible.builtin.set_fact:
    _apt_unattended_upgrades_default_origins: "{{ _apt_unattended_upgrades_default_origins + [gitlab_runner.apt_origin] }}"
  when:
    - apt_unattended_upgrades.enable is defined
    - apt_unattended_upgrades.enable

- name: Install the unattended-upgrades config.
  ansible.builtin.include_role:
    name: debian/apt_unattended_upgrades
  when:
    - apt_unattended_upgrades.enable is defined
    - apt_unattended_upgrades.enable

- name: Ensure Gitlab Runner is installed.
  ansible.builtin.apt:
    name: "gitlab-runner"
    state: present

# @TODO register any runners - you can't just include the config
# Reset the registration token via the API to get a new one
# Then run the registration command, e.g.
# gitlab-runner register --url https://gitlab.com/ --registration-token TOKEN_HERE --name fargate-test-runner --run-untagged --executor custom -n
# This will automatically update /etc/gitlab-runner/config.toml

# Populates the _aws_security_group_list variable used in fargate.toml.j2
- name: Generate security group information.
  ansible.builtin.include_role:
    name: aws/aws_security_groups
    apply:
      delegate_to: localhost # this is how you delegate the include_role module
  vars:
    aws_security_groups:
      profile: "{{ gitlab_runner.fargate.profile }}"
      region: "{{ gitlab_runner.fargate.region }}"
      group_names:
        - "{{ gitlab_runner.fargate.security_group }}"
      return_type: ids
  when: gitlab_runner.install_fargate

- name: Create the Fargate driver directory if it does not exist.
  ansible.builtin.file:
    path: /opt/gitlab-runner
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: true
  when: gitlab_runner.install_fargate

- name: Install the Fargate driver.
  ansible.builtin.get_url:
    url: https://gitlab-runner-custom-fargate-downloads.s3.amazonaws.com/latest/fargate-linux-amd64
    dest: /opt/gitlab-runner/fargate
    mode: 0755
  become: true
  when: gitlab_runner.install_fargate

- name: Place the Fargate configuration file.
  ansible.builtin.template:
    src: fargate.toml.j2
    dest: /etc/gitlab-runner/fargate.toml
    owner: root
    group: root
    force: true
  become: true
  when:
    - gitlab_runner.install_fargate
    - gitlab_runner.fargate | length > 0

- name: Ensure the Fargate metadata directory exists.
  ansible.builtin.file:
    path: /opt/gitlab-runner/metadata
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: true
  when:
    - gitlab_runner.install_fargate

# @TODO inject the executor lines after any Fargate services in config.toml

- name: Ensure the Gitlab runner working directory exists.
  ansible.builtin.file:
    path: "{{ gitlab_runner.runner_workingdir }}"
    state: directory
    mode: '0755'
    owner: "{{ gitlab_runner.username }}"
    group: "{{ gitlab_runner.username }}"
  become: true

- name: Ensure the Gitlab runner service override directory exists.
  ansible.builtin.file:
    path: /etc/systemd/system/gitlab-runner.service.d
    state: directory
    mode: '0755'
    owner: root
    group: root
    force: true
  become: true

- name: Check directory exists. # forces any filesystem caching to clear
  ansible.builtin.stat:
    path: /etc/systemd/system/gitlab-runner.service.d
  register: _service_override_dir

- name: Place the gitlab-runner unit override file. # see https://gitlab.com/gitlab-org/gitlab-runner/-/issues/2422#note_838191146
  ansible.builtin.template:
    src: override.conf.j2
    dest: /etc/systemd/system/gitlab-runner.service.d/override.conf
    mode: '0644'
    owner: root
    group: root
    force: true
  become: true

- name: Restart gitlab-runner service.
  ansible.builtin.service:
    name: gitlab-runner
    state: restarted
    daemon_reload: true
  become: true
  when: gitlab_runner.restart

- name: Run docker_ce role when Fargate driver to be installed.
  ansible.builtin.include_role:
    name: debian/docker_ce
  when: gitlab_runner.install_fargate

- name: Add the ce-provision user to the docker group.
  ansible.builtin.user:
    name: "{{ gitlab_runner.username }}"
    groups: "{{ gitlab_runner.docker_group }}"
    append: true
  when: gitlab_runner.install_fargate

# See https://docs.gitlab.com/runner/shells/index.html#shell-profile-loading
- name: Delete $HOME/.bash_logout for the runner user if it exists.
  ansible.builtin.file:
    path: "/home/{{ gitlab_runner.username }}/.bash_logout"
    state: absent
  become: true
