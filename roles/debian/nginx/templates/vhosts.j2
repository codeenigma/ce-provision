### {{ ansible_managed }}

{% for upstream in domain.upstreams %}
upstream {{ upstream.name }} {
{% for backend in upstream.backends %}
    server {{ backend }};
{% endfor %}
}
{% endfor %}

{% for server in domain.servers %}
server {
    listen {{ server.port }}{% if domain.is_default is defined and domain.is_default %} default_server{% endif %}{% if server.ssl %} ssl{% endif %};
    server_name {{ domain.server_name }};
{% if server.https_redirect is defined and server.https_redirect %}
    rewrite ^ https://{{ domain.server_name }}$request_uri? permanent;
{% endif %}
{% if server.custom_directives is defined %}
    {% for directive in server.custom_directives %}
{{ directive }}
    {% endfor %}
{% endif %}
{% if server.ssl %}
ssl_certificate {{ ssl_facts[_ssl_domains[0]].certificate }};
    ssl_certificate_key {{ ssl_facts[_ssl_domains[0]].key }};
{% endif %}
    error_log {{ domain.error_log }} {{ domain.error_log_level }};
    access_log {{ domain.access_log }} {{ domain.access_log_format | default('main') }};
    root "{{ domain.webroot }}";
    include "/etc/nginx/conf.d/{{ domain.project_type }}";
    include "/etc/nginx/conf.d/_common";
{% if domain.ssl is defined and domain.ssl.handling == 'letsencrypt' %}
{% if domain.ssl.web_server | default('standalone') == 'standalone' %}
    # Proxy for certbot (LetsEncrypt)
    location /.well-known/acme-challenge/ {
        auth_basic off;
        proxy_pass http://127.0.0.1:{{ domain.ssl.http_01_port }}$request_uri;
    }
{% endif %}
{% endif %}

{% if domain.basic_auth.auth_enabled is defined and domain.basic_auth.auth_enabled %}
{% if _profile == 'asg' and domain.is_default is defined and domain.is_default %}
        set $bypassagent "0";
        set $bypass "0";
        set $auth_status "{{ domain.basic_auth.auth_message | default('Restricted content') }}";
        if ($http_user_agent ~* "ELB-HealthChecker") {
            set $bypassagent "1";
        }
        if ($remote_addr ~ "^{{ _aws_vpc_cidr_base | replace('.', '\\.') }}\." ) {
            set $bypass "${bypassagent}1";
        }
        if ($bypass = "11") {
            set $auth_status "off";
        }
    auth_basic $auth_status;
{% else %}
    auth_basic "{{ domain.basic_auth.auth_message | default('Restricted content') }}";
{% endif %}
{% if domain.basic_auth.auth_user is defined and domain.basic_auth.auth_user | length > 0 %}
    auth_basic_user_file "/etc/nginx/passwords/{{ domain.server_name }}.htpasswd";
{% endif %}
{% if domain.basic_auth.auth_file is defined and domain.basic_auth.auth_file | length > 0 %}
    auth_basic_user_file "/etc/nginx/passwords/{{ domain.server_name }}.provided.htpasswd";
{% endif %}
{% endif %}
}
{% endfor %}
