---
#@todo Configuration is for dev.

- name: Add MySQL repository and key.
  ansible.builtin.include_role:
    name: debian/apt_repository
  vars:
    apt_repository:
      legacy_repo: "deb http://repo.mysql.com/apt/debian/ {{ ansible_distribution_release }} {{ mysql_server.apt_repo_version }}"
      name: mysql
      types:
        - deb
        - deb-src
      uris:
        - http://repo.mysql.com/apt/debian/
      signed_by: "{{ mysql_server.apt_signed_by }}"
      suites: "{{ ansible_distribution_release }}"
      components:
        - "{{ mysql_server.apt_repo_version }}"
      state: present
      enabled: true
      key_refresh_timer_OnCalendar: "Mon *-*-* 00:00:00" # see systemd.time documentation - https://www.freedesktop.org/software/systemd/man/latest/systemd.time.html#Calendar%20Events

- name: Pin MySQL packages.
  ansible.builtin.template:
    src: mysql.pref.j2
    dest: "/etc/apt/preferences.d/mysql.pref"
    owner: root
    group: root
    mode: 0644
    force: true

- name: Add MySQL repository to unattended-upgrades origins list.
  ansible.builtin.set_fact:
    _apt_unattended_upgrades_default_origins: "{{ _apt_unattended_upgrades_default_origins + [ mysql_server.apt_origin ] }}"
  when:
    - apt_unattended_upgrades.enable is defined
    - apt_unattended_upgrades.enable

- name: Install the unattended-upgrades config.
  ansible.builtin.include_role:
    name: debian/apt_unattended_upgrades
  when:
    - apt_unattended_upgrades.enable is defined
    - apt_unattended_upgrades.enable

- name: Ensure MySQL is installed.
  ansible.builtin.apt:
    pkg: mysql-server
    state: present
    update_cache: true

- name: Copy MySQL overriding configuration in place.
  ansible.builtin.template:
    src: mysql_dev.cnf.j2
    dest: "/etc/mysql/mysql.conf.d/zz_dev.cnf"
    owner: root
    group: root
    mode: 0644

# - name: Trigger overrides
#   include_role:
#     name: _overrides
#   vars:
#     _overrides: "{{ blackfire.overrides }}"
#   when:
#     - blackfire.overrides is defined
#     - blackfire.overrides | length > 0

- name: Restart MySQL.
  ansible.builtin.service:
    name: mysql
    state: restarted
    enabled: true

- name: Update MySQL root password.
  ansible.builtin.shell: >
    mysql -NBe 'GRANT ALL ON *.* TO "root"@"%" IDENTIFIED BY "root" WITH GRANT OPTION;'
  when: is_local is defined and is_local

- name: Update MySQL ce-dev password.
  ansible.builtin.shell: >
    mysql -NBe 'GRANT ALL ON *.* TO "ce-dev"@"%" IDENTIFIED BY "ce-dev" WITH GRANT OPTION;'
  when: is_local is defined and is_local

- name: Ensure MySQL can write data.
  ansible.builtin.file:
    path: /var/lib/mysql
    owner: mysql
    group: mysql
    recurse: true

- name: Ensure MySQL can write PID/lock.
  ansible.builtin.file:
    path: /var/run/mysqld
    owner: mysql
    group: mysql
    mode: "0777"
    recurse: true

- name: Workaround Docker overlayFS issue.
  ansible.builtin.shell: >
    find /var/lib/mysql -type f -exec touch {} \;

- name: Restart mysql.
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true
