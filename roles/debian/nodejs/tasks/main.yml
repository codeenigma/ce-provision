---
- name: Add NodeJS repository and key.
  ansible.builtin.include_role:
    name: debian/apt_repository
  vars:
    apt_repository:
      legacy_repo: "deb https://deb.nodesource.com/node_{{ nodejs.version }} nodistro main"
      format: deb822
      name: nodejs
      types:
        - deb
        - deb-src
      uris:
        - "https://deb.nodesource.com/node_{{ nodejs.version }}"
      signed_by: "{{ nodejs.apt_signed_by_nodejs }}"
      suites: "nodistro"
      components:
        - main
      state: present
      enabled: true
      key_refresh_timer_OnCalendar: "Mon *-*-* 00:15:00"

- name: Add Yarn repository and key.
  ansible.builtin.include_role:
    name: debian/apt_repository
  vars:
    apt_repository:
      legacy_repo: "deb https://dl.yarnpkg.com/debian/ stable main"
      format: deb822
      name: nodejs_yarn
      types:
        - deb
      uris:
        - https://dl.yarnpkg.com/debian/
      signed_by: "{{ nodejs.apt_signed_by_yarn }}"
      suites: stable
      components:
        - main
      state: present
      enabled: true
      key_refresh_timer_OnCalendar: "Mon *-*-* 00:25:00"

- name: Pin Node packages.
  ansible.builtin.template:
    src: nodesource.pref.j2
    dest: "/etc/apt/preferences.d/nodesource.pref"
    owner: root
    group: root
    mode: "0644"
    force: true

- name: Add nodejs and yarn repositories to unattended-upgrades origins list.
  ansible.builtin.set_fact:
    _apt_unattended_upgrades_default_origins: "{{ _apt_unattended_upgrades_default_origins + [nodejs.apt_origin_nodejs, nodejs.apt_origin_yarn] }}"
  when:
    - apt_unattended_upgrades.enable is defined
    - apt_unattended_upgrades.enable

- name: Install the unattended-upgrades config.
  ansible.builtin.include_role:
    name: debian/apt_unattended_upgrades
  when:
    - apt_unattended_upgrades.enable is defined
    - apt_unattended_upgrades.enable

- name: Ensure NodeJS and Yarn are installed.
  ansible.builtin.apt:
    pkg: ["nodejs", "yarn"]
    state: present

- name: Install global npm packages.
  community.general.npm:
    name: "{{ item.name }}"
    global: true
    version: "{{ item.version | default(omit) }}"
  with_items: "{{ nodejs.npm_packages }}"
  when:
    - nodejs.npm_packages | length > 0
    - item.path is not defined

- name: Install application specific npm packages.
  community.general.npm:
    name: "{{ item.name }}"
    version: "{{ item.version | default(omit) }}"
    path: "{{ item.path }}"
  with_items: "{{ nodejs.npm_packages }}"
  when:
    - nodejs.npm_packages | length > 0
    - item.path is defined
