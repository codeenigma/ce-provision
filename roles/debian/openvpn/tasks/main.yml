---
- name: Download latest openvpn-install script.
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh
    dest: "{{ openvpn.script_install_path }}/openvpn-install.sh"
    mode: '0750'
    owner: "{{ user_provision.username }}"
    group: "{{ user_provision.username }}"
    force: true

- name: Place the headless installer script.
  ansible.builtin.template:
    src: headless-openvpn-install.sh.j2
    dest: "{{ openvpn.script_install_path }}/headless-openvpn-install.sh"
    mode: "0750"
    owner: "{{ user_provision.username }}"
    group: "{{ user_provision.username }}"

- name: Attempt to install OpenVPN in headless mode.
  ansible.builtin.command:
    cmd: "{{ openvpn.script_install_path }}/headless-openvpn-install.sh"
  when: openvpn.auto_install

- name: Allow multiple simultaneous VPN connections.
  ansible.builtin.lineinfile:
    path: /etc/openvpn/server.conf
    line: duplicate-cn
  when: openvpn.multiple_connections
  notify: Restart OpenVPN.

- name: Add ipv4 push routes comment for readability.
  ansible.builtin.lineinfile:
    path: /etc/openvpn/server.conf
    line: float
  when: openvpn.allow_floating_client_ip
  notify: Restart OpenVPN.

# Push routes
- name: Add ipv4 push routes comment for readability.
  ansible.builtin.lineinfile:
    path: /etc/openvpn/server.conf
    line: "# ipv4 push routes"
  when: openvpn.push_routes_ipv4 | length > 0

- name: Add ipv4 push routes to the VPN.
  ansible.builtin.lineinfile:
    path: /etc/openvpn/server.conf
    line: 'push "route {{ item }}"'
  with_items: "{{ openvpn.push_routes_ipv4 }}"
  when: openvpn.push_routes_ipv4 | length > 0
  notify: Restart OpenVPN.

- name: Add ipv6 push routes comment for readability.
  ansible.builtin.lineinfile:
    path: /etc/openvpn/server.conf
    line: "# ipv6 push routes"
  when:
    - openvpn.push_routes_ipv6 | length > 0
    - openvpn.ipv6_support == "y"

- name: Add ipv6 push routes to the VPN.
  ansible.builtin.lineinfile:
    path: /etc/openvpn/server.conf
    line: 'push "route-ipv6  {{ item }}"'
  with_items: "{{ openvpn.push_routes_ipv6 }}"
  when:
    - openvpn.push_routes_ipv6 | length > 0
    - openvpn.ipv6_support == "y"
  notify: Restart OpenVPN.

# @TODO find and replace replace IP range - https://github.com/angristan/openvpn-install/blob/master/openvpn-install.sh#L785
# @TODO find and replace the cipher - https://github.com/angristan/openvpn-install/blob/master/openvpn-install.sh#L895-L896

# LDAP integration
- name: Install OpenVPN plugin for PAM.
  ansible.builtin.apt:
    pkg: openvpn-auth-ldap
    state: present
  when: openvpn.ldap_integration

- name: Ensure the OpenVPN PAM config is in place.
  ansible.builtin.template:
    src: openvpn.pam.j2
    dest: /etc/pam.d/openvpn
    mode: "0644"
    owner: root
    group: root
  when: openvpn.ldap_integration

- name: Add LDAP integration config to OpenVPN.
  ansible.builtin.lineinfile:
    path: /etc/openvpn/server.conf
    line: "plugin /usr/lib/x86_64-linux-gnu/openvpn/plugins/openvpn-plugin-auth-pam.so openvpn"
  when: openvpn.ldap_integration
  notify: Restart OpenVPN.

- name: Restart OpenVPN.
  ansible.builtin.service:
    name: "openvpn@server"
    state: restarted
  when: openvpn.ldap_integration

# Installation complete - provide user information
- name: Service notice.
  ansible.builtin.debug:
    msg: "OpenVPN is ready to use, to manage the server run {{ openvpn.script_install_path }}/openvpn-install.sh as root."
