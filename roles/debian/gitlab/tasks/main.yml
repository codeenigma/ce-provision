---
- name: Add a DNS record for GitLab
  amazon.aws.route53:
    state: "{{ gitlab.gitlab_route_53.state }}"
    profile: "{{ gitlab.gitlab_route_53.aws_profile }}"
    zone: "{{ gitlab.gitlab_route_53.zone }}"
    record: "{{ gitlab.server_name }}"
    type: "{{ gitlab.gitlab_route_53.type }}"
    value: "{{ gitlab.gitlab_route_53.value }}"
    overwrite: true
  delegate_to: localhost
  become: false
  when:
    - gitlab.gitlab_route_53.zone is defined
    - gitlab.gitlab_route_53.zone | length > 0

- name: Add a DNS record for Mattermost
  amazon.aws.route53:
    state: "{{ gitlab.mattermost_route_53.state }}"
    profile: "{{ gitlab.mattermost_route_53.aws_profile }}"
    zone: "{{ gitlab.mattermost_route_53.zone }}"
    record: "{{ gitlab.mattermost_url }}"
    type: CNAME
    value: "{{ gitlab.server_name }}"
    overwrite: true
  delegate_to: localhost
  become: false
  when:
    - gitlab.mattermost_route_53.zone is defined
    - gitlab.mattermost_route_53.zone | length > 0

- name: Add repository key for Gitlab.
  ansible.builtin.apt_key:
    url: https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey
    state: present

- name: Add repository for Gitlab.
  ansible.builtin.apt_repository:
    repo: "deb https://packages.gitlab.com/gitlab/gitlab-ce/debian/ {{ ansible_distribution_release }} main"
    state: present

- name: Add source repository for Gitlab.
  ansible.builtin.apt_repository:
    repo: "deb-src https://packages.gitlab.com/gitlab/gitlab-ce/debian/ {{ ansible_distribution_release }} main"
    state: present

- name: Add GitLab repository to unattended-upgrades origins list.
  ansible.builtin.set_fact:
    _apt_unattended_upgrades_default_origins: "{{ _apt_unattended_upgrades_default_origins + [ gitlab.apt_origin ] }}"
  when: apt_unattended_upgrades.enable

- name: Install the unattended-upgrades config.
  ansible.builtin.include_role:
    name: debian/apt_unattended_upgrades
  when: apt_unattended_upgrades.enable

- name: Ensure Gitlab is installed.
  ansible.builtin.apt:
    pkg: "gitlab-ce"
    state: present
    update_cache: true

- name: Generates SSL keys.
  ansible.builtin.include_role:
    name: debian/ssl
  when: gitlab.ssl.enabled
  vars:
    ssl: "{{ gitlab.ssl | combine( { 'domain': gitlab.server_name } ) }}"

- name: Copy Gitlab configuration file.
  ansible.builtin.template:
    src: gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb

- name: Copy Gitlab configuration script.
  ansible.builtin.template:
    src: gitlab-config.rb.j2
    dest: /etc/gitlab/gitlab-config.rb

- name: Stop Gitlab.
  ansible.builtin.command: /opt/gitlab/bin/gitlab-ctl stop

- name: Reconfigure Gitlab.
  ansible.builtin.command: /opt/gitlab/bin/gitlab-ctl reconfigure

- name: Let Gitlab know it's on Docker.
  ansible.builtin.copy:
    content: "gitlab-docker"
    dest: "/opt/gitlab/embedded/service/gitlab-rails/INSTALLATION_TYPE"
    mode: "0666"
  when:
    - is_local is defined
    - is_local

- name: Copy startup script in place.
  ansible.builtin.template:
    src: docker-init.sh.j2
    dest: "/opt/gitlab-init.sh"
    owner: root
    group: root
    mode: "0555"
    force: true
  when:
    - is_local is defined
    - is_local

- name: Trigger overrides
  ansible.builtin.include_role:
    name: _overrides
  vars:
    _overrides: "{{ gitlab.overrides }}"
  when:
    - gitlab.overrides is defined
    - gitlab.overrides | length > 0

- name: Manually restart Gitlab/Docker.
  ansible.builtin.command: "/bin/sh /opt/gitlab-init.sh"
  when:
    - is_local is defined
    - is_local

- name: Ensure GitLab is started.
  ansible.builtin.command: /opt/gitlab/bin/gitlab-ctl start

- name: Run the GitLab configuration script for config that cannot be set in gitlab.rb.
  ansible.builtin.command: "gitlab-rails runner /etc/gitlab/gitlab-config.rb"
