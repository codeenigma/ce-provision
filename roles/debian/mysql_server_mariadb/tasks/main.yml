---
# @todo Configuration is for dev.

- name: Ensure mysql is installed.
  ansible.builtin.apt:
    pkg: "mariadb-server"
    state: present
    update_cache: true

- name: Copy MySQL overriding configuration in place.
  ansible.builtin.template:
    src: mysql_dev.cnf.j2
    dest: "/etc/mysql/conf.d/zz_dev.cnf"
    owner: root
    group: root
    mode: "0644"

# - name: Trigger overrides
#   include_role:
#     name: _overrides
#   vars:
#     _overrides: "{{ blackfire.overrides }}"
#   when:
#     - blackfire.overrides is defined
#     - blackfire.overrides | length > 0

- name: Restart mysql.
  ansible.builtin.service:
    name: mysql
    state: restarted
    enabled: true

- name: Update MySQL root password.
  ansible.builtin.shell: >
    mysql -NBe 'GRANT ALL ON *.* TO "root"@"%" IDENTIFIED BY "root" WITH GRANT OPTION;'
  when: is_local is defined and is_local

- name: Update MySQL ce-dev password.
  ansible.builtin.shell: >
    mysql -NBe 'GRANT ALL ON *.* TO "ce-dev"@"%" IDENTIFIED BY "ce-dev" WITH GRANT OPTION;'
  when: is_local is defined and is_local

- name: Ensure mysql can write data.
  ansible.builtin.file:
    path: /var/lib/mysql
    owner: mysql
    group: mysql
    recurse: true

- name: Ensure mysql can write PID/lock.
  ansible.builtin.file:
    path: /var/run/mysqld
    owner: mysql
    group: mysql
    mode: "0777"
    recurse: true

- name: Workaround Docker overlayFS issue.
  ansible.builtin.shell: >
    find /var/lib/mysql -type f -exec touch {} \;

- name: Restart mysql.
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true
