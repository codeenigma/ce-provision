---
- name: Ensure nginx is installed.
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: true
    cache_valid_time: 240

- name: Ensure passlib is installed.
  ansible.builtin.pip:
    name: passlib
    executable: pip3

- name: Copy main nginx config.
  template:
    src: nginx.conf.j2
    dest: "/etc/nginx/nginx.conf"
    owner: root
    group: root
    mode: 0644

- name: Ensure passwords directory exists.
  file:
    path: /etc/nginx/passwords
    state: directory
    mode: "0755"

- name: Copy project type-specific configuration in place.
  template:
    src: "{{ item }}.j2"
    dest: "/etc/nginx/conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
    force: true
  with_items:
    - _common
    - custom
    - docker_registry
    - drupal_common
    - drupal7
    - drupal8
    - flat
    - matomo
    - mautic
    - simplesamlphp
    - symfony3
    - symfony4
    - wordpress

- name: Ensure log dir exists.
  file:
    path: "/var/log/nginx"
    state: directory

- name: Remove existing vhosts
  file:
    path: "/etc/nginx/sites-enabled"
    state: absent

- name: Recreate vhosts folder
  file:
    path: "/etc/nginx/sites-enabled"
    state: directory

- name: Check if we have an AWS Cloudwatch folder.
  ansible.builtin.stat:
    path: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d
  register: _nginx_cloudwatch_dir

- name: Generates AWS Cloudwatch default config.
  template:
    src: cloudwatch-main.json.j2
    dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/nginx-main.json
  when:
    - _nginx_cloudwatch_dir.stat.isdir is defined and _nginx_cloudwatch_dir.stat.isdir

- name: Generate domain specific configuration.
  include_tasks: domain.yml
  with_items: "{{ nginx.domains }}"
  loop_control:
    loop_var: domain

- name: Trigger overrides
  include_role:
    name: _overrides
  vars:
    _overrides: "{{ nginx.overrides }}"
  when:
    - nginx.overrides is defined
    - nginx.overrides | length > 0

- name: Ensure Nginx is restarted.
  service:
    name: nginx
    state: restarted
