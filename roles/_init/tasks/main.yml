---
- name: Check OS family.
  when: ansible_os_family != "Debian"
  block:
    - name: Abort if target is not a Debian server.
      ansible.builtin.debug:
        msg: "ce-provision currently only supports Debian based distributions of Linux."
    - ansible.builtin.meta: end_host

# Load Linux services into ansible_facts.services.
- name: Populate service facts
  ansible.builtin.service_facts:

- name: Set "tracking" file for the playbook.
  ansible.builtin.set_fact:
    current_play_md5_file: "{{ _ce_provision_build_id }}-{{ playbook_dir | basename }}-{{ inventory_hostname }}"

- name: Sanitize tracking file name.
  ansible.builtin.set_fact:
    current_play_md5_file: "{{ current_play_md5_file | regex_replace('[^A-z0-9]', '') }}"

- name: Make sure file exists.
  ansible.builtin.copy:
    content: ""
    dest: "{{ _ce_provision_data_dir }}/{{ current_play_md5_file }}"
    force: false
    mode: "0666"
  delegate_to: localhost

- name: Build the list of directories to scan for changes.
  ansible.builtin.set_fact:
    _init_vars_dirs_list: "{{ _init.vars_dirs + [playbook_dir] }}"

- name: Compute files md5 hash.
  ansible.builtin.shell: 'set -o pipefail && find {{ _init_vars_dir }} -type f -exec md5sum {} \; | cut -d " " -f1 | md5sum'
  args:
    warn: false
  delegate_to: "localhost"
  register: _init_vars_dirs_md5
  with_items: "{{ _init_vars_dirs_list }}"
  loop_control:
    loop_var: _init_vars_dir

- name: Combine files md5 hash.
  ansible.builtin.set_fact:
    current_play_dir_md5: "{{ current_play_dir_md5 | default() + _init_vars_dir_md5.stdout }}"
  with_items: "{{ _init_vars_dirs_md5.results }}"
  loop_control:
    loop_var: _init_vars_dir_md5

- name: Lookup current playbook md5
  ansible.builtin.set_fact:
    previous_play_dir_md5: "{{ lookup('file', '{{ _ce_provision_data_dir }}/{{ current_play_md5_file }}') }}"

- name: Stop play if playbook md5 is unchanged.
  ansible.builtin.meta: end_play
  when:
    - current_play_dir_md5 == previous_play_dir_md5
    - not _init.force_play
    - not _ce_provision_force_play

- name: Include vars directories.
  ansible.builtin.include_vars:
    dir: "{{ _init_vars_dir_include }}"
    extensions:
      - "yml"
  with_items: "{{ _init.vars_dirs }}"
  loop_control:
    loop_var: _init_vars_dir_include

- name: Load custom vars file.
  ansible.builtin.include_tasks: allowed_vars.yml
  when:
    - _init.ce_provision_extra_repository
    - _init.ce_provision_extra_repository_vars_file
    - _init.ce_provision_extra_repository_allowed_vars
