---
- name: Add repository key for NodeJS repository.
  ansible.builtin.apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present

- name: Add repository for NodeJS.
  ansible.builtin.apt_repository:
    repo: "deb https://deb.nodesource.com/node_{{ nodejs.version }} {{ ansible_distribution_release }} main"
    state: present

- name: Add source repository for NodeJS.
  ansible.builtin.apt_repository:
    repo: "deb-src https://deb.nodesource.com/node_{{ nodejs.version }} {{ ansible_distribution_release }} main"
    state: present

- name: Add repository key for Yarn repository.
  ansible.builtin.apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg
    state: present

- name: Add repository for Yarn.
  ansible.builtin.apt_repository:
    repo: "deb https://dl.yarnpkg.com/debian/ stable main"
    state: present

- name: Pin Node packages.
  ansible.builtin.template:
    src: nodesource.pref.j2
    dest: "/etc/apt/preferences.d/nodesource.pref"
    owner: root
    group: root
    mode: "0644"
    force: true

- name: Add nodejs and yarn repositories to unattended-upgrades origins list.
  ansible.builtin.set_fact:
    _apt_unattended_upgrades_default_origins: "{{ _apt_unattended_upgrades_default_origins + [nodejs.apt_origin_nodejs, nodejs.apt_origin_yarn] }}"
  when: apt_unattended_upgrades.enable

- name: Install the unattended-upgrades config.
  ansible.builtin.include_role:
    name: apt_unattended_upgrades
  when: apt_unattended_upgrades.enable

- name: Ensure NodeJS and Yarn are installed.
  ansible.builtin.apt:
    pkg: ["nodejs", "yarn"]
    state: present

- name: Install global npm packages.
  community.general.npm:
    name: "{{ item.name }}"
    global: true
    version: "{{ item.version | default(omit) }}"
  with_items: "{{ nodejs.npm_packages }}"
  when:
    - nodejs.npm_packages | length > 0
    - item.path is not defined

- name: Install application specific npm packages.
  community.general.npm:
    name: "{{ item.name }}"
    version: "{{ item.version | default(omit) }}"
    path: "{{ item.path }}"
  with_items: "{{ nodejs.npm_packages }}"
  when:
    - nodejs.npm_packages | length > 0
    - item.path is defined
