---
- name: Ensure Apache is installed.
  ansible.builtin.apt:
    name: apache2
    state: present
    update_cache: true
    cache_valid_time: 240

- name: Ensure Apache utils are installed.
  ansible.builtin.apt:
    name: apache2-utils
    state: present
    update_cache: true
    cache_valid_time: 240

- name: Ensure Apache FCGI module is installed.
  ansible.builtin.apt:
    name: libapache2-mod-fcgid
    state: present
    update_cache: true
    cache_valid_time: 240

- name: Enable Apache modules.
  community.general.apache2_module:
    name: "{{ item }}"
    state: present
  with_items: "{{ apache.mods_enabled }}"

# @todo: this should be triggered by a handler if modules change
- name: Restart apache2 after module changes.
  ansible.builtin.service:
    name: apache2
    state: restarted

- name: Copy main Apache config.
  ansible.builtin.template:
    src: apache2.conf.j2
    dest: "/etc/apache2/apache2.conf"
    owner: root
    group: root
    mode: 0644

- name: Copy PHP config.
  ansible.builtin.template:
    src: php-fpm.conf.j2
    dest: "/etc/apache2/conf-available/php{{ php.version[-1] }}-fpm.conf"
    owner: root
    group: root
    mode: 0644
    force: true

- name: Enable PHP config.
  ansible.builtin.file:
    src: "/etc/apache2/conf-available/php{{ php.version[-1] }}-fpm.conf"
    dest: "/etc/apache2/conf-enabled/php{{ php.version[-1] }}-fpm.conf"
    state: link

- name: Copy project type-specific configuration in place.
  ansible.builtin.template:
    src: "{{ item }}.conf.j2"
    dest: "/etc/apache2/conf-available/{{ item }}.conf"
    owner: root
    group: root
    mode: 0644
    force: true
  with_items:
    - _common
    - drupal7
    - flat
    - nagios

- name: Enable common config.
  ansible.builtin.file:
    src: "/etc/apache2/conf-available/_common.conf"
    dest: "/etc/apache2/conf-enabled/_common.conf"
    state: link

- name: Ensure passwords directory exists.
  ansible.builtin.file:
    path: /etc/apache2/passwords
    state: directory
    mode: "0755"

- name: Ensure log directory exists.
  ansible.builtin.file:
    path: "/var/log/apache2"
    state: directory

- name: Remove existing vhosts.
  ansible.builtin.file:
    path: "/etc/apache2/sites-enabled"
    state: absent

- name: Recreate vhosts folder.
  ansible.builtin.file:
    path: "/etc/apache2/sites-enabled"
    state: directory

- name: Check if we have an AWS Cloudwatch folder.
  ansible.builtin.stat:
    path: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d
  register: _apache2_cloudwatch_dir

- name: Generates AWS Cloudwatch default config.
  ansible.builtin.template:
    src: cloudwatch-main.json.j2
    dest: /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/apache2-main.json
  when:
    - _apache2_cloudwatch_dir.stat.isdir is defined and _apache2_cloudwatch_dir.stat.isdir

- name: Generate domain specific configuration.
  ansible.builtin.include_tasks: domain.yml
  with_items: "{{ apache.domains }}"
  loop_control:
    loop_var: domain

- name: Ensure apache2 is restarted.
  ansible.builtin.service:
    name: apache2
    state: restarted
