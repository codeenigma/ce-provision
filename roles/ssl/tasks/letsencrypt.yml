---
- name: Ensure Certbot is installed.
  ansible.builtin.apt:
    pkg: certbot
    state: present

- name: define SSL base path.
  ansible.builtin.set_fact:
    _ssl_base_path: "/etc/letsencrypt/live/{{ ssl.domain }}"

- name: define key path.
  ansible.builtin.set_fact:
    _ssl_current_key_path: "{{ _ssl_base_path }}/privkey.pem"

- name: define cert path.
  ansible.builtin.set_fact:
    _ssl_current_cert_path: "{{ _ssl_base_path }}/fullchain.pem"

- name: Check if we have a certificate.
  ansible.builtin.stat:
    path: "{{ _ssl_current_cert_path }}"
  register: letsencrypt_cert

- name: Stop services listening on port 80.
  ansible.builtin.service:
    name: "{{ ssl_service }}"
    state: stopped
  with_items: "{{ ssl.services }}"
  loop_control:
    loop_var: ssl_service
  when:
    - not letsencrypt_cert.stat.exists
    - ssl.services is defined

- name: Register certificate if needed.
  ansible.builtin.command: "/usr/bin/certbot certonly -n --cert-name {{ domain }} --http-01-port {{ ssl.http_01_port }} --standalone --preferred-challenges http -d {{ domain }} --agree-tos -m {{ ssl.email }}"
  with_items: "{{ ssl.domains }}"
  loop_control:
    loop_var: domain
  when:
    - not letsencrypt_cert.stat.exists

- name: Restart services.
  ansible.builtin.service:
    name: "{{ ssl_service }}"
    state: started
  with_items: "{{ ssl.services }}"
  loop_control:
    loop_var: ssl_service
  when:
    - not letsencrypt_cert.stat.exists

- name: Add key/cert pairs to know paths information.
  ansible.builtin.set_fact:
    ssl_facts: "{{ ssl_facts | combine({ domain:{ 'certificate': _ssl_current_cert_path, 'key': _ssl_current_key_path } }) }}"
  with_items: "{{ ssl.domains }}"
  loop_control:
    loop_var: domain

- name: Create the certbot renewal script.
  ansible.builtin.template:
    src: le_cron.sh.j2
    dest: /usr/local/bin/le_cron.sh
    owner: root
    group: root
    mode: 0755
  when: ssl.autorenew

- name: Create cron job for certificate renewal.
  ansible.builtin.cron:
    name: "certbot renewal"
    minute: "{{ ssl.renewal_minute | default("0") }}"
    hour: "{{ ssl_renewal_hour | default("0") }}"
    day: "{{ ssl_renewal_day | default("7") }}"
    job: "/usr/local/bin/le_cron.sh"
    cron_file: le-autorenewal
    user: root
  when: ssl.autorenew
