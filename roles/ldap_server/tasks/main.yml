---
- name: Purge existing LDAP server installation.
  ansible.builtin.apt:
    pkg: ["slapd", "ldapscripts"]
    state: absent
    purge: true
  when: ldap_server.slapd.purge

# This is defending against a specific bug with Docker and the init script - https://stackoverflow.com/questions/30671693
# @TODO: refactor this to be a role based on this - https://stackoverflow.com/a/69017642/896690
- name: Ensure running slapd processes are killed.
  ansible.builtin.command:
    cmd: pkill slapd
  when: ldap_server.slapd.purge
  ignore_errors: true

- name: Ensure LDAP and dependencies are installed.
  ansible.builtin.apt:
    pkg: ["slapd", "ldapscripts", "libldap2-dev"] # python-ldap needs libldap2-dev
    state: present
    default_release: buster-backports

- name: Ensure additional dependencies for python-ldap are installed.
  ansible.builtin.apt:
    pkg: ["libsasl2-dev", "libssl-dev"]
    state: present

- name: Install python-ldap with pip.
  ansible.builtin.pip:
    name: python-ldap

- name: Create the slapd config file.
  ansible.builtin.template:
    src: slapd.j2
    dest: /etc/default/slapd
    owner: root
    group: root
    mode: 0644

- name: Purge existing LDAP schema files.
  ansible.builtin.file:
    path: /usr/local/src/custom-ldap-schemas
    state: absent
  when: ldap_server.config.purge

- name: Check if LDAP schema directory exists.
  ansible.builtin.stat:
    path: "{{ ldap_server.config.path }}"
  register: _ldap_server_ldifs
  delegate_to: localhost

- name: Copy LDAP schemas from config repo.
  ansible.builtin.copy:
    src: "{{ ldap_server.config.path }}/"
    dest: /usr/local/src/custom-ldap-schemas
    owner: openldap
    group: openldap
    directory_mode: 0700
    mode: 0644
  when:
    - _ldap_server_ldifs.stat.exists
    - ldap_server.config.import

- name: Find LDIF files.
  ansible.builtin.find:
    paths: /usr/local/src/custom-ldap-schemas
    file_type: file
    recurse: true
    patterns: "*.ldif"
  register: _ldap_server_config_ldifs
  when:
    - _ldap_server_ldifs.stat.exists
    - ldap_server.config.import

- name: Stop slapd service.
  ansible.builtin.service:
    name: slapd
    state: stopped

# This is defending against a specific bug with Docker and the init script - https://stackoverflow.com/questions/30671693
# @TODO: refactor this to be a role based on this - https://stackoverflow.com/a/69017642/896690
- name: Ensure running slapd processes are killed.
  ansible.builtin.command:
    cmd: pkill slapd
  ignore_errors: true

- name: Delete existing slapd config prior to import.
  ansible.builtin.file:
    path: /etc/ldap/slapd.d
    state: absent
  when:
    - _ldap_server_ldifs.stat.exists
    - ldap_server.config.import

- name: Recreate slapd config directory.
  ansible.builtin.file:
    path: /etc/ldap/slapd.d
    state: directory
    owner: openldap
    group: openldap
    mode: 0700
  when:
    - _ldap_server_ldifs.stat.exists
    - ldap_server.config.import

- name: Install the available schemas.
  ansible.builtin.command:
    cmd: "slapadd -F /etc/ldap/slapd.d -n 0 -l {{ item.path }}"
  become_user: openldap
  become: true
  when:
    - _ldap_server_ldifs.stat.exists
    - ldap_server.config.import
  loop: "{{ _ldap_server_config_ldifs.files | flatten(levels=1) | sort(attribute='path') }}"
  loop_control:
    label: "{{ item.path }}"

- name: Generate SSL keys.
  ansible.builtin.include_role:
    name: ssl
  when: ldap_server.ssl is defined
  vars:
    ssl: "{{ ldap_server.ssl }}"

- name: Start slapd service.
  ansible.builtin.service:
    name: slapd
    state: started

- name: Set up replication.
  ansible.builtin.include_tasks: replication.yml
  when:
    - ldap_server.replication.host
    - ldap_server.config.import