# @todo Once the ec2_eip module is fixed, we can get rid of most of the logic below.
# For now, we register and manually tag the EIP with ec2_tag.
- name: Check if we have an EIP already.
  amazon.aws.ec2_eip_info:
    profile: "{{ aws_vpc_subnet.aws_profile }}"
    region: "{{ aws_vpc_subnet.region }}"
    filters:
      tag:Name: "{{ subnet.name }}"
  register: _aws_vpc_subnet_eip

- name: Create the NAT gateway.
  amazon.aws.ec2_vpc_nat_gateway:
    profile: "{{ aws_vpc_subnet.aws_profile }}"
    region: "{{ aws_vpc_subnet.region }}"
    tags: "{{ aws_vpc_subnet.tags | combine({'Name': subnet.name}) }}"
    subnet_id: "{{ _aws_vpc_subnet_subnet.subnet.id }}"
    wait: true
    allocation_id: "{{ _aws_vpc_subnet_eip.addresses[0].allocation_id | default(omit) }}"
    if_exist_do_not_create: true
  register: _aws_vpc_subnet_gateway

- name: Ensure EIP is tagged properly.
  amazon.aws.ec2_tag:
    resource: "{{ _aws_vpc_subnet_gateway.nat_gateway_addresses[0].allocation_id }}"
    tags: "{{ aws_vpc_subnet.tags | combine({'Name': subnet.name}) }}"
    profile: "{{ aws_vpc_subnet.aws_profile }}"
    region: "{{ aws_vpc_subnet.region }}"
