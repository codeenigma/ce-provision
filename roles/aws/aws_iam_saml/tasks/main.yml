- name: Create IAM account alias for grouping
  iam_alias:
    aws_account_alias: "{{ aws_iam_saml.aws_account_alias }}"
  delegate_to: localhost
  when:
    - aws_iam_saml.aws_account_alias is defined
    - aws_iam_saml.aws_account_alias | length > 0

- name: Create SAML provider
  community.aws.iam_saml_federation:
    name: "{{ aws_iam_saml.provider_name }}"
    profile: "{{ aws_iam_saml.aws_profile }}"
    saml_metadata_document: "{{ aws_iam_saml.saml_metadata_document }}"
  delegate_to: localhost
  when:
    - aws_iam_saml.saml_metadata_document is defined
    - aws_iam_saml.saml_metadata_document | length > 40

- name: Get the current AWS account caller identity information
  amazon.aws.aws_caller_info:
    profile: "{{ aws_iam_saml.aws_profile }}"
  delegate_to: localhost
  register: _aws_account_info

- name: Create a role for administrative access
  community.aws.iam_role:
    name: "{{ aws_iam_saml.admin_role }}"
    profile: "{{ aws_iam_saml.aws_profile }}"
    tags: "{{ aws_iam_saml.tags }}"
    assume_role_policy_document: "{{ lookup('template', 'assume_admin_policy.j2') }}"
    description: "Administrative access to all systems"
    managed_policy:
      - arn:aws:iam::aws:policy/AdministratorAccess
  delegate_to: localhost
  when:
    - aws_iam_saml.admin_groups is defined
    - aws_iam_saml.admin_groups[0] is defined

- name: Create a role for read-only access
  community.aws.iam_role:
    name: "{{ aws_iam_saml.readonly_role }}"
    profile: "{{ aws_iam_saml.aws_profile }}"
    tags: "{{ aws_iam_saml.tags }}"
    assume_role_policy_document: "{{ lookup('template', 'assume_readonly_policy.j2') }}"
    description: "Read-only access to all systems"
    managed_policy:
      - arn:aws:iam::aws:policy/ReadOnlyAccess
  delegate_to: localhost
  when:
    - aws_iam_saml.readonly_groups is defined
    - aws_iam_saml.readonly_groups[0] is defined

- name: Create a customer managed policy for billing access
  community.aws.iam_managed_policy:
    policy_name: "{{ aws_iam_saml.billing_policy }}"
    policy_description: "Custom policy for billing access"
    profile: "{{ aws_iam_saml.aws_profile }}"
    policy: "{{ lookup('template', 'access_billing_policy.j2') }}"
    state: present
  delegate_to: localhost
  register: _billing_policy
  when:
    - aws_iam_saml.billing_groups is defined
    - aws_iam_saml.billing_groups[0] is defined

- name: Create a role for billing access
  community.aws.iam_role:
    name: "{{ aws_iam_saml.billing_role }}"
    profile: "{{ aws_iam_saml.aws_profile }}"
    tags: "{{ aws_iam_saml.tags }}"
    assume_role_policy_document: "{{ lookup('template', 'assume_billing_policy.j2') }}"
    description: "Billing access only"
    managed_policy:
      - "{{ _billing_policy.policy.arn }}"
  delegate_to: localhost
  when:
    - aws_iam_saml.billing_groups is defined
    - aws_iam_saml.billing_groups[0] is defined
    - _billing_policy.policy is succeeded

- name: Clone SimpleSAMLphp repo
  ansible.builtin.git:
    repo: "{{ aws_iam_saml.saml_repository }}"
    dest: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}"
    version: "{{ aws_iam_saml.saml_repository_branch }}"
  delegate_to: localhost
  when:
    - aws_iam_saml.saml_repository is defined
    - aws_iam_saml.saml_repository | length > 20

- name: Create AWS account include for centralised admin
  ansible.builtin.template:
    src: "simplesamlphp_admin_include.j2"
    dest: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}/{{ aws_iam_saml.saml_include_path }}/admin_{{ _aws_account_info.account }}.php"
  delegate_to: localhost
  register: _saml_include_template
  when:
    - aws_iam_saml.saml_include_path is defined
    - aws_iam_saml.saml_include_path | length > 0

- name: Stage the AWS account include
  ansible.builtin.command: git add .
  args:
    chdir: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}"
  delegate_to: localhost
  when:
    - _saml_include_template is not skipped

- name: Try a git commit of the AWS account include
  ansible.builtin.command: git commit -m "Automated commit - admin access for AWS account {{ _aws_account_info.account }}."
  args:
    chdir: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}"
  delegate_to: localhost
  ignore_errors: true
  register: _include_commit
  when:
    - _saml_include_template is not skipped

- name: Push the AWS account include
  ansible.builtin.command: git push origin {{ aws_iam_saml.saml_repository_branch }}
  args:
    chdir: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}"
  delegate_to: localhost
  when:
    - _include_commit is succeeded
    - _saml_include_template is not skipped

- name: Create a SAML service provider for the AWS account
  ansible.builtin.template:
    src: "simplesamlphp_sp.j2"
    dest: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}/{{ aws_iam_saml.saml_sp_path }}/aws_{{ _aws_account_info.account }}.php"
  delegate_to: localhost
  register: _saml_sp_template
  when:
    - aws_iam_saml.saml_sp_path is defined
    - aws_iam_saml.saml_sp_path | length > 0

- name: Stage the AWS account service provider
  ansible.builtin.command: git add .
  args:
    chdir: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}"
  delegate_to: localhost
  when:
    - _saml_sp_template is succeeded

- name: Try a git commit of the AWS account service provider
  ansible.builtin.command: git commit -m "Automated commit - dedicated SP for AWS account {{ _aws_account_info.account }}."
  args:
    chdir: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}"
  delegate_to: localhost
  ignore_errors: true
  register: _sp_commit
  when:
    - _saml_sp_template is succeeded

- name: Push the AWS account service provider
  ansible.builtin.command: git push origin {{ aws_iam_saml.saml_repository_branch }}
  args:
    chdir: "{{ _ce_provision_build_dir }}/{{ aws_iam_saml.saml_repository_directory }}"
  delegate_to: localhost
  when:
    - _sp_commit is succeeded
    - _saml_sp_template is succeeded
