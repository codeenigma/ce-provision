---
- name: Generate security group information.
  ansible.builtin.include_role:
    name: aws/aws_security_groups
  vars:
    profile: "{{ aws_elasticache.aws_profile }}"
    region: "{{ aws_elasticache.region }}"
    group_names: "{{ aws_elasticache.elasticache_security_groups }}"
    return_type: ids
  when: aws_elasticache.elasticache_security_groups | length > 0

- name: Create ElastiCache subnet group.
  community.aws.elasticache_subnet_group:
    name: "{{ aws_elasticache.name }}"
    state: "{{ aws_elasticache.state }}"
    subnets: "{{ aws_elasticache.subnets }}"
    region: "{{ aws_elasticache.region }}"
    profile: "{{ aws_elasticache.aws_profile }}"
    description: "{{ aws_elasticache.description }}"
  register: _aws_elasticache_subnet_group

# @TODO parameter group handling

- name: Create ElastiCache cluster.
  community.aws.elasticache:
    profile: "{{ aws_elasticache.aws_profile }}"
    name: "{{ aws_elasticache.name }}"
    region: "{{ aws_elasticache.region }}"
    state: "{{ aws_elasticache.state }}"
    engine: "{{ aws_elasticache.elasticache_engine }}"
    cache_subnet_group: "{{ _aws_elasticache_subnet_group.cache_subnet_group.name }}"
    cache_engine_version: "{{ aws_elasticache.cache_engine_version | default(omit) }}"
    cache_parameter_group: "{{ aws_elasticache.cache_parameter_group | default(omit) }}"
    node_type: "{{ aws_elasticache.elasticache_node_type }}"
    num_nodes: "{{ aws_elasticache.elasticache_nodes }}"
    cache_port: "{{ aws_elasticache.elasticache_port }}"
    security_group_ids: "{{ _aws_security_group_list }}" # variable populated by the aws_security_groups role
    zone: "{{ aws_elasticache.zone | default(omit) }}"

# @TODO grab the endpoint data for the memcached client role